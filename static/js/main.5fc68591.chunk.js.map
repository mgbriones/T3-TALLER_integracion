{"version":3,"sources":["logo.svg","componentes/socket.js","componentes/chat.js","componentes/mapa.js","componentes/vuelos.js","App.js","reportWebVitals.js","index.js"],"names":["socket","socketIOClient","path","Chat","useState","mensaje","setMensaje","user","setUser","mensajes","setMensajes","useEffect","on","off","onSubmit","e","preventDefault","console","log","emit","name","message","htmlFor","id","cols","rows","value","placeholder","onChange","target","map","i","align","Date","date","toLocaleString","MyMap","test","algo_util","limeOptions","color","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","ruta","Polyline","pathOptions","positions","Vuelos","code","airline","origin","destination","passengers","info","setInfo","camino","info_llegado","plane","push","seats","pasajero","age","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fc68591.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// Aqui se inicia la conexion al webSocket\r\n\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nconst ENDPOINT = \"wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl\";\r\nconst socket = socketIOClient(ENDPOINT, {\r\n    path:'/flights'});\r\n\r\nexport default socket;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport socket from \"./socket\"; \r\n\r\nconst Chat = () => {\r\n    const [mensaje, setMensaje] = useState(\"\"); // creo que estoy hay que borrarlo\r\n    const [user, setUser] = useState(\"\"); // creo que estoy hay que borrarlo\r\n    const [mensajes, setMensajes] = useState([]); // array con todos los msn del chat\r\n\r\n    // mensaje de prueba\r\n    \r\n    \r\n    //useEffect(()=> {\r\n        //socket.emit('CHAT', msn)\r\n    //})\r\n\r\n    //useEffect(() => {\r\n        //socket.on(\"mensajes\", (mensaje) => {\r\n          //setMensajes([...mensajes, mensaje]);\r\n        //});\r\n    useEffect(() => {\r\n        socket.on(\"CHAT\", (mensaje) => {\r\n          setMensajes([...mensajes, mensaje]);\r\n        });    \r\n    \r\n        return () => {\r\n          socket.off()};\r\n      }, [mensajes]);\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        console.log(mensaje)\r\n        socket.emit(\"CHAT\", {name: user, message: mensaje});\r\n        setMensaje(\"\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            \r\n\r\n            <form onSubmit={submit}>\r\n                <label htmlFor=\"\"> <h1>Chatear</h1></label>\r\n                <div>\r\n                <textarea\r\n                    name=\"\"\r\n                    id=\"\"\r\n                    cols=\"20\"\r\n                    rows=\"1\"\r\n                    value={user}\r\n                    placeholder = \"Nombre Usuario\"\r\n                    onChange={(e) => setUser(e.target.value)}\r\n                ></textarea>\r\n\r\n                <textarea\r\n                    name=\"\"\r\n                    id=\"\"\r\n                    cols=\"20\"\r\n                    rows=\"1\"\r\n                    value={mensaje}\r\n                    placeholder = \"Escriba su mensaje...\"\r\n                    onChange={(e) => setMensaje(e.target.value)}\r\n                ></textarea>\r\n\r\n                 \r\n                </div>\r\n                <button >Enviar</button> \r\n                \r\n            </form>\r\n\r\n            <div>\r\n            {/*/ Esto es para poder imprimir los mensajes recibidos */}\r\n            {console.log(mensajes)}\r\n            {mensajes.map((e, i) => <div key ={i}> \r\n            <p align = 'left'><strong>{e.name}</strong> -- <i>Send {(new Date(e.date)).toLocaleString()}</i>  </p>\r\n            <p align = 'left'><h3>{e.message}</h3> </p> \r\n            <br></br>\r\n            \r\n\r\n             \r\n\r\n\r\n\r\n            </div> )}\r\n            \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Chat;","import React from \"react\";\r\nimport { Map, MapContainer, TileLayer,Polyline, Marker, Popup } from \"react-leaflet\";\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\n\r\nfunction MyMap(test){\r\n    let algo_util = test\r\n    console.log('ESTA LLEGANDO ALGO?')\r\n    console.log(algo_util)\r\n    console.log('------------')\r\n    const center = [0, 0]\r\n\r\n    const polyline = [\r\n            [-33.382761,-70.803203],\r\n            [-34.82264,-58.533321],\r\n        ]\r\n\r\n    const polyline2 = [\r\n            [-38.921106,-72.649643],\r\n            [-34.82264,-58.533321],\r\n\r\n        ]\r\n    var mensaje = [\r\n                    [\r\n                        [-33.382761,-70.803203],\r\n                        [-34.82264,-58.533321],\r\n                    ],\r\n\r\n                    [\r\n                        [-38.921106,-72.649643],\r\n                        [-34.82264,-58.533321],\r\n                    ]\r\n                ]\r\n\r\n\r\n    const limeOptions = { color: 'red' }\r\n    const purpleOptions = { color: 'purple' }\r\n    return(\r\n        <MapContainer center={center} zoom={1} scrollWheelZoom={true}>\r\n            <TileLayer\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n            \r\n            {console.log('###########'), console.log(test)}\r\n\r\n            {test.map((ruta) => <Polyline pathOptions={limeOptions} positions={ruta} />)}\r\n            \r\n            {console.log('@@@@@@@@@@@@@@'), console.log(test)}\r\n\r\n\r\n        </MapContainer>\r\n        );\r\n\r\n    \r\n}\r\nexport default MyMap;\r\n\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport socket from \"./socket\";\r\nimport MyMap from \"./mapa\";\r\n\r\nconst Vuelos = () => {\r\n    const [mensaje, setMensaje] = useState(\"\"); // creo que estoy hay que borrarlo\r\n    const [info, setInfo] = useState([{code:'null',airline:'null',origin:['null','null'],destination:['null','null'], passengers:[]}]); // hay que tener un mejor manejo de errores\r\n    //const [mensajes, setMensajes] = useState([]); // array con todos los msn del chat\r\n    const [ruta, setRuta] = useState([]);\r\n    var camino = [];\r\n\r\n\r\n    useEffect(() => {\r\n        socket.on(\"FLIGHTS\", (info_llegado) => {\r\n            setInfo(info_llegado);//setInfo([...info, info_llegado]);\r\n\r\n            \r\n          \r\n        });    \r\n        socket.emit(\"FLIGHTS\");\r\n        return () => {\r\n        socket.off(\"FLIGHTS\")};\r\n      }, []);\r\n    \r\n\r\n    //console.log(info)\r\n    //socket.emit(\"FLIGHTS\");\r\n    //setMensaje(\"\");\r\n    \r\n       \r\n    info.map((plane) => camino.push([plane.origin, plane.destination]) ) \r\n \r\n    \r\n    return (\r\n        <div>\r\n          {console.log('TUTUTUTUTUTU')}\r\n            {console.log(camino[0][0][0] == 'null', console.log('TERMINO'))}\r\n\r\n            <h1>Mapa</h1>\r\n           {!(camino[0][0][0]=='null') && MyMap(camino) }\r\n           {console.log('ESTO ES EN EL RETURN'), \r\n            console.log(camino),\r\n            console.log('====----======-....') , \r\n            camino = [], \r\n            console.log(camino),\r\n            console.log('====----======-....') }\r\n                  \r\n\r\n\r\n              <h1>Informacíon de Vuelos</h1>\r\n            {/*/ Esto es para poder imprimir los vuelos recibidos */}\r\n\r\n            {info.map((e, i) => <div key ={i}>            \r\n\r\n            <table>\r\n            <tr> <td><strong>Codigo:</strong></td> <td>{e.code}</td> </tr>\r\n              <tr> <td>Aerolinea:</td> <td> {e.airline}</td> </tr>\r\n\r\n              <tr> <td>Origen:</td> <td>({e.origin[0]},{e.origin[1]})</td> </tr>\r\n         \r\n              <tr> <td>Destino:</td> <td>({e.destination[0]},{e.destination[1]})</td> </tr>\r\n\r\n              <tr> <td>Avion:</td> <td>{e.plane}</td> </tr>\r\n\r\n              <tr> <td>Asientos:</td> <td>{e.seats}</td> </tr>\r\n\r\n              <tr> <td>Pasajeros:</td> <td>{(e.passengers).map((pasajero) => \r\n                        <p>{pasajero.name} ({pasajero.age} Años)</p>)}</td> </tr>\r\n\r\n              \r\n              \r\n            </table>\r\n            <br></br>\r\n            </div> )}\r\n      \r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Vuelos;","import logo from './logo.svg';\nimport './App.css';\n\n//import socket from \"./componentes/socket\";\nimport Chat from \"./componentes/chat\";\nimport Vuelos from \"./componentes/vuelos\";\nimport Aviones from \"./componentes/aviones\";\nimport MyMap from \"./componentes/mapa\";\n{/*   import MyMap from \"./componentes/mapa\";        */}\n{/*   import socket from \"./componentes/socket\";     */}\n\n\nfunction App() {\n\n  //con estas lineas puedo llamar a las psosiciones de las aviones\n  //socket.on('POSITION', function(data) { \n  //console.log(data);\n  //})\n\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       \n        \n        \n\n        <p>\n          <Vuelos/>\n        </p>\n\n        <p>\n          <Chat/>\n        </p>\n        \n        \n\n\n\n\n\n        \n\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}